plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace "com.example.mvicompose"
    compileSdk AppConfig.COMPILE_SDK

    defaultConfig {
        applicationId AppConfig.APPLICATION_ID
        minSdk AppConfig.MIN_SDK
        targetSdk AppConfig.TARGET_SDK
        versionCode AppConfig.VERSION_CODE
        versionName AppConfig.VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion AndroidX.composeCompilerVersion
    }
}

dependencies {
    implementation project(path: ':base:architecture')
    implementation project(path: ':base:common')
    implementation project(path: ':data')
    implementation project(path: ':data-api')
    implementation project(path: ':feature:rates')

    implementation (AndroidX.coreKtx)
    implementation (AndroidX.appCompat)
    implementation (AndroidX.lifecycleRuntime)
    implementation (AndroidX.lifecycleViewModel)
    implementation (Material.material)

    implementation (AndroidX.composeUi)
    implementation (AndroidX.composeMaterial)
    implementation (AndroidX.composeAnimations)
    implementation (AndroidX.composeTooling)
    implementation (AndroidX.composeFoundation)
    implementation (AndroidX.lifecycleViewModelCompose)

    implementation (Coroutines.core)
    implementation (Coroutines.android)

    implementation(Kotlin.serialization)

    implementation(Okhttp.client)
    implementation(Okhttp.loggingInterceptor)
    implementation(Retrofit.retrofit)
    implementation(Retrofit.serializationConverter)

    implementation (Di.koinAndroid)
    implementation (Di.koinCompose)

    testImplementation (UnitTests.junit)
    testImplementation (Coroutines.test)

    androidTestImplementation (AndroidX.testExtJunit)
    androidTestImplementation (AndroidX.testEspressoCore)
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }
}